services:
  app:
    image: ${DOCKER_IMAGE_NAME}:${IMAGE_TAG:-latest}
    container_name: ${CONTAINER_NAME}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "${PORT_MAPPING}"
    env_file:
      - .env
    networks:
      - career-fit-net
    restart: on-failure

  db:
    image: mysql:8.0
    container_name: career-fit-mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - career-fit-net
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "${DB_USER}", "-p${DB_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: career-fit-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - career-fit-net
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql-exporter:
    image: prom/mysqld-exporter:latest
    container_name: career-fit-mysql-exporter
    ports:
      - "9104:9104"
    environment:
      - MYSQLD_EXPORTER_PASSWORD=${DB_PASSWORD}
    command:
      - "--mysqld.username=root"
      - "--mysqld.address=career-fit-mysql:3306"
    networks:
      - career-fit-net
    depends_on:
      - db
    restart: always

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: career-fit-redis-exporter
    environment:
      - REDIS_ADDR=redis://career-fit-redis:6379
    ports:
      - "9121:9121"
    networks:
      - career-fit-net
    depends_on:
      - redis
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: career-fit-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - career-fit-net

  grafana:
    image: grafana/grafana:latest
    container_name: career-fit-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_INSTALL_PLUGINS=
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - career-fit-net
    depends_on:
      - prometheus
    restart: always

networks:
  career-fit-net:
    driver: bridge

volumes:
  db-data:
  redis-data:
  grafana-storage: