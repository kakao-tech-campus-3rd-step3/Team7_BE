plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.careerfit'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //data jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //spring web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    //mysql
    runtimeOnly 'com.mysql:mysql-connector-j'
    //validation
    implementation("org.springframework.boot:spring-boot-starter-validation")
    //spring security
    implementation("org.springframework.boot:spring-boot-starter-security")
    //jwt
    implementation("io.jsonwebtoken:jjwt-api:0.12.6")
    implementation("io.jsonwebtoken:jjwt-impl:0.12.6")
    runtimeOnly("io.jsonwebtoken:jjwt-gson:0.12.6")
    // OAuth2 Client
    implementation("org.springframework.boot:spring-boot-starter-oauth2-client")
    // aws s3
    implementation platform('software.amazon.awssdk:bom:2.27.21')
    implementation 'software.amazon.awssdk:s3'
    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // spring doc
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'
    // h2
    testImplementation 'com.h2database:h2'
    // spring actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // prometheus
    implementation 'io.micrometer:micrometer-registry-prometheus'
}

tasks.named('test') {
    useJUnitPlatform()
}
